{
  "ComponentName": "Pal",
  "Tags": [
    "Public CCC Options",
    "General",
    "GPU Info",
    "Performance",
    "Printing and Logging",
    "Command Buffer",
    "Resource Settings",
    "Prefetching (L2 Cache Warming)",
    "Shader Options",
    "MGPU",
    "WSI",
    "Debug Overlay",
    "GPU Profiler",
    "CmdBuffer Logger",
    "Interface Logger",
    "Debug",
    "SafeSetting",
    "DevMode",
    "HDR",
    "Profiling",
    "Bringup",
    "Emulation",
    "RIS",
    "Gfx6",
    "Gfx7",
    "Gfx8",
    "Gfx9",
    "Gfx10",
    "Gfx11"
  ],
  "Settings": [
    {
      "Name": "cmdBufForceUc",
      "Tags": [
        "Command Buffer"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Controls whether command buffers are uncached"
    },
    {
      "Name": "TFQ",
      "Tags": [
        "Public CCC Options"
      ],
      "Defaults": {
        "Default": 1
      },
      "Scope": "PublicCatalystKey",
      "Type": "uint32",
      "Description": "Controls texture filtering optimizations exposed by CCC."
    },
    {
      "Name": "ForcePreambleCmdStream",
      "Tags": [
        "General",
        "Performance"
      ],
      "Defaults": {
        "Default": true
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Controls whether the preamble command stream for a Queue is always submitted or skipped when the same scheduler context runs back-to-back on the CP ring. If true: Always run the preamble cmd stream. If false: Only run the preamble cmd stream when necessary."
    },
    {
      "Name": "MaxNumCmdStreamsPerSubmit",
      "Tags": [
        "General"
      ],
      "Defaults": {
        "Default": 0
      },
      "Scope": "PrivatePalKey",
      "Type": "uint32",
      "Description": "Controls the maximum number of command streams that can be submitted at once to the kernel. Overrides the kernel maximum value if set to a value > 0."
    },
    {
      "Name": "RequestHighPriorityVmid",
      "Tags": [
        "General",
        "Performance"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Requests that contexts be created with high priority VMID to reduce page table invalidation penalties."
    },
    {
      "Name": "RequestDebugVmid",
      "Tags": [
        "General",
        "Debug",
        "Profiling"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Requests that contexts be created with a debug VMID. This allows for better shader debugging by keeping the page tables valid after the context has been switched out.  This is also useful for SQTT profiling as it ensures both compute and graphics queue work will share the same VMID allowing the thread trace to be filtered to a single VMID (to avoid capturing other processes work) while still capturing all work by the target process. NOTE: RGP tracing automatically requests the Debug VMID during setup so there is no need to change this setting when capturing RGP traces. A static VMID is requested instead if the supportStaticVmid flag is set in GpuChipProperties."
    },
    {
      "Name": "StartingPerfcounterState",
      "Tags": [
        "General",
        "Debug",
        "Profiling"
      ],
      "ValidValues": {
        "IsEnum": true,
        "Values": [
          {
            "Name": "StartingPerfcounterStateDisabled",
            "Value": 0,
            "Description": "Perfcounters get disabled at start of workloads"
          },
          {
            "Name": "StartingPerfcounterStateEnabled",
            "Value": 1,
            "Description": "Perfcounters get enabled at start of workloads"
          },
          {
            "Name": "StartingPerfcounterStateAuto",
            "Value": 2,
            "Description": "Perfcounters get enabled/disabled at start of workloads based on if perfcounter tools are enabled"
          },
          {
            "Name": "StartingPerfcounterStateUntouched",
            "Value": 3,
            "Description": "Don't touch perfcounters enablement at start of workloads."
          }
        ],
        "Name": "StartingPerfcounterState",
        "Description": "How to handle perfcounter state at the start of workloads."
      },
      "Defaults": {
        "Default": "StartingPerfcounterStateAuto"
      },
      "Scope": "PrivatePalKey",
      "Type": "enum",
      "Description": "Whether to tell windowed perfcounters to count the current workload. By default, enabled if RDP is detected or GpuProfiler is on."
    },
    {
      "Name": "DefaultSqttDetailedCuIndex",
      "Tags": [
        "General",
        "Debug",
        "Profiling"
      ],
      "Defaults": {
        "Default": -1
      },
      "Scope": "PrivatePalKey",
      "Type": "int32",
      "Description": "Value to override the default SQTT CU within each SE to profile with which is otherwise the first always-on/active CU. Note that this setting is ignored if a custom thread trace target CU is provided. Also note that this is the CU index - for setting a custom WGP to profile with (i.e. on GFX10+ with 2 CUs per WGP), you must set this value to 2x the intended WGP eg. for WGP3, set this to 6."
    },
    {
      "Name": "DisableQueryInternalOps",
      "Tags": [
        "General",
        "Debug",
        "Profiling"
      ],
      "Defaults": {
        "Default": true
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Disable query pools when known internal PAL operations are called so that it does not interfere with this data gathering. If you are running a Vulkan Test which uses nested CmdBuffers you will need to set this to False to ensure correct behavior."
    },
    {
      "Name": "DisableVmPageFaultReporting",
      "Tags": [
        "General",
        "Debug",
        "Profiling"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Disable VM page fault reporting to OS, if the OS supports it."
    },
    {
      "Name": "NeverChangeClockMode",
      "Tags": [
        "General",
        "Debug",
        "Profiling"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Disables setting GPU clocks in the driver (eg. during profiling). Enable this if using AGM to force clock values"
    },
    {
      "ValidValues": {
        "Values": [
          {
            "Description": "Instructs the driver to use all RBs",
            "Value": -1
          },
          {
            "Description": "Driver will choose an optimal value",
            "Value": 0
          },
          {
            "LogicOp": "GreaterThanOrEqual",
            "Description": "Instructs the driver to use this exact number of RBs",
            "Value": 1
          }
        ]
      },
      "Name": "NonlocalDestGraphicsCopyRbs",
      "Tags": [
        "General",
        "Performance"
      ],
      "Defaults": {
        "Default": 0
      },
      "Scope": "PrivatePalKey",
      "Type": "int32",
      "Description": "Specifies the number of RBs used in a graphics copy to nonlocal destinations.  Reducing the number of RBs can increase PCIe throughput."
    },
    {
      "ValidValues": {
        "IsEnum": true,
        "Values": [
          {
            "Name": "IfhModeDisabled",
            "Value": 0,
            "Description": "IFH is disabled"
          },
          {
            "Name": "IfhModePal",
            "Value": 1,
            "Description": "IFH is implemented in PAL (kernel is not called)"
          },
          {
            "Name": "IfhModeKmd",
            "Value": 2,
            "Description": "IFH is implemented in the kernel"
          }
        ],
        "Name": "IfhMode",
        "Description": "IFH Mode setting values."
      },
      "Name": "IFH",
      "Tags": [
        "General",
        "Debug"
      ],
      "Defaults": {
        "Default": "IfhModeDisabled"
      },
      "Scope": "PrivatePalKey",
      "Type": "enum",
      "Description": "Controls Infinitely Fast Hardware (IFH) mode. See IfhGpuMask for which ASICs are affected (default all)"
    },
    {
      "Name": "IdleAfterSubmitGpuMask",
      "Tags": [
        "General",
        "Debug",
        "SafeSetting"
      ],
      "Flags": {
        "IsHex": true
      },
      "Defaults": {
        "Default": 0
      },
      "Scope": "PrivatePalKey",
      "Type": "uint32",
      "Description": "Idles after each call to Submit for the GPU's specified by the bitmask. GPU's are specified by the position in the bitfield and map to the LDA chain array.  Example: 0x2 would cause the GPU corresponding to the 2nd LDA chain in the array (array position 1) to idle after each submit."
    },
    {
      "ValidValues": {
        "IsEnum": true,
        "Values": [
          {
            "Name": "TossPointNone",
            "Value": 0,
            "Description": "Normal operation, toss point is disabled"
          },
          {
            "Name": "TossPointAfterRaster",
            "Value": 1,
            "Description": "Kill Rasterizer"
          },
          {
            "Name": "TossPointWireframe",
            "Value": 2,
            "Description": "Force Wireframe fill mode"
          },
          {
            "Name": "TossPointBackFrontFaceCull",
            "Value": 3,
            "Description": "Force back and front face culling"
          },
          {
            "Name": "TossPointAfterSetup",
            "Value": 4,
            "Description": "Scissor-out all geometry"
          },
          {
            "Name": "TossPointDepthClipDisable",
            "Value": 5,
            "Description": "Force Depth-clipping disabled"
          },
          {
            "Name": "TossPointAfterPs",
            "Value": 6,
            "Description": "Disable Color Buffer writes"
          }
        ],
        "Name": "TossPointMode",
        "Description": "Toss Point Modes"
      },
      "Name": "TossPointMode",
      "Tags": [
        "General",
        "Performance"
      ],
      "Defaults": {
        "Default": "TossPointNone"
      },
      "Scope": "PrivatePalKey",
      "Type": "enum",
      "Description": "Toss points enables stripping out of GPU work for more focused performace analysis. This setting controls which work will be tossed."
    },
    {
      "Name": "ForceFixedFuncColorResolve",
      "Tags": [
        "General",
        "Debug",
        "Resource Settings"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "This setting forces MSAA color images to always prefer fixed function resolves over any other resolve method (if FixedFunc resolves are supported by the image). This will override the client's preferred resolve method"
    },
    {
      "Name": "IsLocalHeapPreferred",
      "Tags": [
        "General",
        "Debug",
        "SafeSetting"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Remove GTT from the preferred heap and only keep VRAM domain"
    },
    {
      "Name": "EnableNullCpuAccessFlag",
      "Tags": [
        "General",
        "Debug",
        "SafeSetting"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Do not specify the CPU access flag and ask kernel to determine it dynamically when real map happens"
    },
    {
      "Name": "ClearAllocatedLfb",
      "Tags": [
        "General",
        "Debug",
        "SafeSetting"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Clears local frame buffer to zero. The allocated local frame buffer is not cleared to zero on Linux.  Applications sometimes assume that the driver will clear the framebuffer on Linux (which would match Windows behavior)."
    },
    {
      "Name": "EnableAdaptiveSync",
      "Tags": [
        "General"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Enable adaptive sync (variable refresh rate) for a window of Xserver"
    },
    {
      "Name": "UseZwpDmaBufProtocol",
      "Tags": [
        "General"
      ],
      "Defaults": {
        "Default": true
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Enable the use of the 'zwp_linux_dmabuf_v1' interface for creating dma-based wl_buffers for Wayland compositors. If false, PAL will default to using the Mesa wl_drm interface"
    },
    {
      "Name": "EnableGangSubmit",
      "Tags": [
        "General",
        "Debug"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Enable gang submit for test purpose"
    },
    {
      "Description": "When set to true, swizzle mode determination will be implemented as follows: AddrLib returns a list of valid modes that are allowed on the corresponding hardware configuration, and PAL will choose a mode from that list based on any client preferences. Only for GFX11",
      "Tags": [
        "General"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalGfx9Key",
      "Type": "bool",
      "Name": "Addr2NewSwizzleModeDetermination"
    },
    {
      "Name": "Addr2Disable256BSwizzleMode",
      "Tags": [
        "General",
        "Resource Settings"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Disable 256B Swizzle mode"
    },
    {
      "ValidValues": {
        "IsEnum": true,
        "Values": [
          {
            "Name": "Addr2Disable4kBSwizzleDepth",
            "Value": 1,
            "Description": "Depth images"
          },
          {
            "Name": "Addr2Disable4kBSwizzleColor1D",
            "Value": 2,
            "Description": "1D Color images"
          },
          {
            "Name": "Addr2Disable4kBSwizzleColor2D",
            "Value": 4,
            "Description": "2D Color images"
          },
          {
            "Name": "Addr2Disable4kBSwizzleColor3D",
            "Value": 8,
            "Description": "3D Color images"
          }
        ],
        "Name": "Addr2Disable4kBSwizzle",
        "Description": "Bitmask values that correspond to image types for controlling 4kB swizzle modes."
      },
      "Name": "Addr2Disable4KbSwizzleMode",
      "Tags": [
        "General",
        "Resource Settings"
      ],
      "Flags": {
        "IsHex": true,
        "IsBitmask": true
      },
      "Defaults": {
        "Default": 0
      },
      "Scope": "PrivatePalKey",
      "Type": "uint32",
      "Description": "Bitmask of surface types which should not allow 4kB swizzle modes for chips which use AddrMgr2."
    },
    {
      "ValidValues": {
        "IsEnum": true,
        "Values": [
          {
            "Name": "Addr2UseVarSwizzleDefault",
            "Value": 0,
            "Description": "Allow VAR swizzle mode usage and use suggested swizzle mode returned by AddrLib."
          },
          {
            "Name": "Addr2UseVarSwizzleFull",
            "Value": 1,
            "Description": "Force every resource to use VAR swizzle mode, if possible."
          },
          {
            "Name": "Addr2UseVarSwizzleDisable",
            "Value": 2,
            "Description": "Forbid any resource to use VAR swizzle mode."
          },
          {
            "Name": "Addr2UseVarSwizzleRt1xAa",
            "Value": 4,
            "Description": "Enable VAR swizzle mode for 1xAA render targets."
          },
          {
            "Name": "Addr2UseVarSwizzleDs1xAa",
            "Value": 8,
            "Description": "Enable VAR swizzle mode for 1xAA depth/stencil resources."
          },
          {
            "Name": "Addr2UseVarSwizzleRtMsaa",
            "Value": 16,
            "Description": "Enable VAR swizzle mode for MSAA render targets."
          },
          {
            "Name": "Addr2UseVarSwizzleDsMsaa",
            "Value": 32,
            "Description": "Enable VAR swizzle mode for MSAA depth/stencil resources."
          },
          {
            "Name": "Addr2UseVarSwizzleNotRtOrDs",
            "Value": 64,
            "Description": "Enable VAR swizzle for all resources that are not render targets or depth/stencil resources."
          }
        ],
        "Name": "Addr2UseVarSwizzle"
      },
      "Description": "Determines how to enable VAR swizzle modes.",
      "Tags": [
        "General",
        "Resource Settings"
      ],
      "Defaults": {
        "Default": 2
      },
      "Flags": {
        "IsBitmask": true,
        "IsHex": true
      },
      "Scope": "PrivatePalKey",
      "Type": "uint32",
      "Name": "Addr2UseVarSwizzleMode"
    },
    {
      "Description": "Enable big-page alignment on resources which are yet to be bound",
      "Tags": [
        "General"
      ],
      "Defaults": {
        "Default": true
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Name": "enableBigPagePreAlignment"
    },
    {
      "Description": "Enable large-page alignment on resources which are yet to be bound",
      "Tags": [
        "General"
      ],
      "Defaults": {
        "Default": true
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Name": "enableLargePagePreAlignment"
    },
    {
      "Description": "Enable Iterate256=0 alignment on images which satisfy its conditions and are yet to be bound",
      "Tags": [
        "General"
      ],
      "Defaults": {
        "Default": true
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Name": "enableIterate256PreAlignment"
    },
    {
      "Description": "Disables S swizzle modes for 8bpp color targets.",
      "Tags": [
        "General",
        "Resource Settings"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Name": "Addr2DisableSModes8BppColor"
    },
    {
      "Description": "Disables Display Dcc on primary color targets.",
      "Tags": [
        "General"
      ],
      "Defaults": {
        "Default": false,
        "Windows": false,
        "Linux": true
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Name": "DisableOptimizedDisplay"
    },
    {
      "Name": "GenerateHangReports",
      "Tags": [
        "Debug"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Generate reports when driver detect GPU hang only on Linux. an implicit idle will be applied to each submission, only use in non-performance critical hang debug"
    },
    {
      "Name": "GfxTimeout",
      "Tags": [
        "Debug"
      ],
      "Defaults": {
        "Default": 10
      },
      "Scope": "PrivatePalKey",
      "Type": "uint32",
      "Description": "Graphic engine timeout in seconds for Linux"
    },
    {
      "Description": "(DEBUG ONLY) Skip the GFX DCC to Display DCC retile shader.",
      "Tags": [
        "General"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Name": "DisplayDccSkipRetileBlt"
    },
    {
      "Name": "OverlayReportHDR",
      "Tags": [
        "General",
        "DevMode",
        "HDR"
      ],
      "Defaults": {
        "Default": true
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Determines if the developer mode overlay will report information about HDR mode."
    },
    {
      "ValidValues": {
        "IsEnum": true,
        "Values": [
          {
            "Name": "PipelineHeapLocal",
            "Value": 0,
            "Description": "Local CPU visible heap."
          },
          {
            "Name": "PipelineHeapInvisible",
            "Value": 1,
            "Description": "Local CPU invisible heap."
          },
          {
            "Name": "PipelineHeapGartUswc",
            "Value": 2,
            "Description": "GPU-accessible uncached system memory."
          },
          {
            "Name": "PipelineHeapGartCacheable",
            "Value": 3,
            "Description": "GPU-accessible cached system memory."
          },
          {
            "Name": "PipelineHeapDeferToClient",
            "Value": 4,
            "Description": "Heap type specified by client in pipeline createInfo."
          }
        ],
        "Name": "PreferredPipelineUploadHeap",
        "Description": "Heap preference for pipelines."
      },
      "Name": "PreferredPipelineUploadHeap",
      "Tags": [
        "General",
        "Performance"
      ],
      "Defaults": {
        "Default": "PipelineHeapDeferToClient"
      },
      "Scope": "PrivatePalKey",
      "Type": "enum",
      "Description": "Pipelines are uploaded for GPU access to the heap type preferred."
    },
    {
      "Name": "InsertGuardPageBetweenWddm2VAs",
      "Tags": [
        "General",
        "Debug"
      ],
      "Defaults": {
        "Default": false
      },
      "BuildTypes": [
        "PAL_DEVELOPER_BUILD"
      ],
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "If set we will attempt to insert empty va space in between every allocation mapping in order to force page faults when writing outside of allocations. This helps debug random corruptions when we write past one allocation into another. Must build with PAL_DEVELOPER_BUILD flag for this to work."
    },
    {
      "Name": "AllocationListReusable",
      "Tags": [
        "Performance"
      ],
      "Defaults": {
        "Default": true
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Re-use allocation list across submissions in Linux. This will improve CPU performance of command buffer submission, but will potentially cause GPU memory de-allocation to be delayed."
    },
    {
      "Name": "CmdStreamReadOnly",
      "Tags": [
        "Command Buffer"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Always make command stream memory read-only on the GPU. Normally, busy-tracked allocations are RW, this forces the busy tracker data into a separate RW page. Currently only works on WDDM2"
    },
    {
      "Name": "FenceTimeoutOverride",
      "Tags": [
        "Performance",
        "Emulation"
      ],
      "Defaults": {
        "Default": 0
      },
      "Scope": "PrivatePalKey",
      "Type": "uint32",
      "Description": "Timeout value to override app-specified value for fence timeouts.  This setting is meaningless if the app specified zero seconds.  A value of zero here means to use the app-specified timeout value.  Useful on HW simulation where working cases can result in false timeouts.  Value specified in seconds"
    },
    {
      "Name": "Force64kPageGranularity",
      "Tags": [
        "Performance"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "If set, force all gpu allocations to be aligned/sized in 64k increments. Should improve performance, but will waste a lot of memory in alignment and padding."
    },
    {
      "Name": "UpdateOneGpuVirtualAddress",
      "Tags": [
        "Performance",
        "SafeSetting",
        "Debug"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "If set, when calling RemapVirtualMemoryPages(), PAL will only do one unmap/map protect operation at a time, instead of trying to group the operations by BaseAddress.  This affects WDDM2 only."
    },
    {
      "Name": "AlwaysResident",
      "Tags": [
        "Performance"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "All allocations will be permanently kept resident without management by the client with AddGpuMemoryReferences.  This may reduce the runtime overhead of submission on Linux, but won't work properly if the application overcommits the available GPU memory."
    },
    {
      "Name": "DisableSyncobjFence",
      "Tags": [
        "Performance"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Disable Fence based on Sync Object. Force use Timestamp Fence. By default Fence type is selected according to the system configuration."
    },
    {
      "Name": "DisableSdmaEngine",
      "Tags": [
        "Performance"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Disable entire SDMA engine in UMD driver."
    },
    {
      "Name": "ForceT2tScanlineCopies",
      "Tags": [
        "Performance"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Forces all Tile2Tile sDMA SubWindow copies to be done piecewise by scanline."
    },
    {
      "Name": "DisableSyncObject",
      "Tags": [
        "Performance"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Disables SyncObject support for semaphores which means semaphores will be based on ProOnly or Legacy interfaces according to the system configuration."
    },
    {
      "Name": "NativeAcquirePresentImageOpt",
      "Tags": [
        "Performance"
      ],
      "Defaults": {
        "Default": true
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Whether to take the optimized path based on specific function provided by the native window system when acquiring present image."
    },
    {
      "ValidValues": {
        "IsEnum": true,
        "Values": [
          {
            "Name": "CmdBufDumpModeDisabled",
            "Value": 0,
            "Description": "Command buffer dumping is disabled"
          },
          {
            "Name": "CmdBufDumpModeRecordTime",
            "Value": 1,
            "Description": "Dumping is enabled at command buffer record time"
          },
          {
            "Name": "CmdBufDumpModeSubmitTime",
            "Value": 2,
            "Description": "Dumping is enabled at command buffer submit time"
          }
        ],
        "Name": "CmdBufDumpMode",
        "Description": "Defines the supported command buffer dump modes."
      },
      "Name": "CmdBufDumpMode",
      "Tags": [
        "Printing and Logging"
      ],
      "Defaults": {
        "Default": "CmdBufDumpModeDisabled"
      },
      "Scope": "PrivatePalKey",
      "Type": "enum",
      "Description": "Determines if dumping is enabled, and whether it is at record or submit time."
    },
    {
      "ValidValues": {
        "IsEnum": true,
        "Values": [
          {
            "Name": "CmdBufDumpFormatText",
            "Value": 0,
            "Description": "Command buffers are dumped in plain text."
          },
          {
            "Name": "CmdBufDumpFormatBinary",
            "Value": 1,
            "Description": "Command buffers are dumped in raw binary mode."
          },
          {
            "Name": "CmdBufDumpFormatBinaryHeaders",
            "Value": 2,
            "Description": "Command buffers are dumped in binary mode with PM4 headers."
          }
        ],
        "Name": "CmdBufDumpFormat",
        "Description": "Defines the supported formats for command buffer dumping."
      },
      "Name": "CmdBufDumpFormat",
      "Tags": [
        "Printing and Logging"
      ],
      "Defaults": {
        "Default": "CmdBufDumpFormatBinaryHeaders"
      },
      "Scope": "PrivatePalKey",
      "Type": "enum",
      "Description": "Controls the format of command buffer dumps."
    },
    {
      "Description": "Relative directory where command buffer dumps are placed. Relative to the path in the AMD_DEBUG_DIR environment variable. If that env var isn't set, the location is platform dependent.",
      "Tags": [
        "Printing and Logging"
      ],
      "Flags": {
        "IsDir": true
      },
      "Defaults": {
        "Default": "amdpal/",
        "Windows": "PalCmdBuffers\\",
        "Linux": "amdpal/"
      },
      "Scope": "PrivatePalKey",
      "Name": "CmdBufDumpDirectory",
      "Type": "string"
    },
    {
      "Name": "SubmitTimeCmdBufDumpStartFrame",
      "Tags": [
        "Printing and Logging"
      ],
      "Defaults": {
        "Default": 0
      },
      "Scope": "PrivatePalKey",
      "Type": "uint32",
      "Description": "The starting frame to start dumping command buffers."
    },
    {
      "Name": "SubmitTimeCmdBufDumpEndFrame",
      "Tags": [
        "Printing and Logging"
      ],
      "Defaults": {
        "Default": 0
      },
      "Scope": "PrivatePalKey",
      "Type": "uint32",
      "Description": "The ending frame to stop dumping command buffers."
    },
    {
      "Name": "DumpCmdBufPerFrame",
      "Tags": [
        "Printing and Logging"
      ],
      "Defaults": {
        "Default": true
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Dump Command Buffers in Frame Count Folders, Default True, Like - Frame_0_0x55fc26902070_0_0001.pm4 will be dumped in <logDirectory>/0/Frame_0_0x55fc26902070_0_0001.pm4"
    },
    {
      "Name": "LogCmdBufCommitSizes",
      "Tags": [
        "Printing and Logging"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Controls whether command stream commit sizes are logged to a file."
    },
    {
      "Name": "LogPipelineElf",
      "Tags": [
        "Printing and Logging"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Enables Pipeline Logging of ELFs to disk."
    },
    {
      "Description": "Pipeline Logging configuration options",
      "Tags": [
        "Printing and Logging"
      ],
      "Scope": "PrivatePalKey",
      "Structure": [
        {
          "Description": "Controls logging of internally generated pipelines ELFs (i.e. RPM pipelines, etc.)",
          "Defaults": {
            "Default": false
          },
          "Type": "bool",
          "Name": "LogInternal"
        },
        {
          "Description": "Contols logging of externally generated pipelines ELFs (i.e. the application's pipelines)",
          "Defaults": {
            "Default": false
          },
          "Type": "bool",
          "Name": "LogExternal"
        },
        {
          "Name": "LogHash",
          "Flags": {
            "IsHex": true
          },
          "Defaults": {
            "Default": 0
          },
          "Type": "uint64",
          "Description": "Specific pipeline hash to log."
        },
        {
          "Description": "Relative directory where pipeline information logs are placed. Relative to the path in the AMD_DEBUG_DIR environment variable. If that env var isn't set, the location is platform dependent. Each unique pipeline is in a separate file within that directory. The log name is based on a hash of the pipeline's create info and which shader stages are active.",
          "Flags": {
            "IsDir": true
          },
          "Defaults": {
            "Default": "amdpal/",
            "Windows": "PalPipelines\\",
            "Linux": "amdpal/"
          },
          "Type": "string",
          "Name": "LogDirectory"
        }
      ],
      "Name": "PipelineElfLogConfig"
    },
    {
      "Name": "CmdStreamReserveLimit",
      "Tags": [
        "Command Buffer"
      ],
      "Defaults": {
        "Default": 256
      },
      "Scope": "PrivatePalKey",
      "Type": "uint32",
      "Description": "Specifies how many DWORDs of command space is reserved by ReserveCommands(). This will be clamped by each CmdStream to their CmdAllocator's chunk size."
    },
    {
      "Name": "CmdStreamEnableMemsetOnReserve",
      "Tags": [
        "Command Buffer"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "If true, the command stream will memset all command space to CmdStreamMemsetValue. This will only function on debug builds."
    },
    {
      "Name": "CmdStreamMemsetValue",
      "Tags": [
        "Command Buffer"
      ],
      "Defaults": {
        "Default": 4294967295
      },
      "Scope": "PrivatePalKey",
      "Type": "uint32",
      "Description": "If CmdStreamEnableMemsetOnReserve is true all command space will be memset to this value. This will only function on debug builds."
    },
    {
      "Name": "CmdBufChunkEnableStagingBuffer",
      "Tags": [
        "Command Buffer"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "If true, each command chunk will allocate a system memory staging buffer. Commands will be stored in this buffer until the chunk is finalized."
    },
    {
      "Name": "CmdBufDisallowNestedLaunchViaIb2",
      "Tags": [
        "Command Buffer"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "If true, nested command buffers will not be launched using an IB2 packet. This setting forces the Pal::CmdBufferBuildFlags::disallowNestedLaunchViaIb2 flag on. (Useful for logging nested command buffers at submit time)"
    },
    {
      "ValidValues": {
        "IsEnum": true,
        "Values": [
          {
            "Name": "Pm4OptDefaultEnable",
            "Value": 0,
            "Description": "Only enable optimizations when the app specifies the CMD_BUFFER_OPTIMIZE_GPU_SMALL_BATCH command buffer build flag."
          },
          {
            "Name": "Pm4OptForceEnable",
            "Value": 1,
            "Description": "Force optimizations always enabled."
          },
          {
            "Name": "Pm4OptForceDisable",
            "Value": 2,
            "Description": "Force optimizations always disabled."
          }
        ],
        "Name": "Pm4OptEnable",
        "IsExlusive": true
      },
      "Name": "CmdBufOptimizePm4",
      "Tags": [
        "Command Buffer",
        "Performance"
      ],
      "Defaults": {
        "Default": "Pm4OptDefaultEnable"
      },
      "Scope": "PrivatePalKey",
      "Type": "enum",
      "Description": "Controls fine-grained optimization of each command buffer's PM4 stream. Can improve performance of CP-bound applications that have CPU cycles to spare."
    },
    {
      "Name": "CmdBufOptimizePm4Split",
      "Tags": [
        "Command Buffer",
        "Performance"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Controls fine-grained optimization of each command buffer's PM4 stream. If set, prioritizes reducing register writes over CP overhead by splitting packets."
    },
    {
      "ValidValues": {
        "IsEnum": true,
        "Values": [
          {
            "Name": "CmdBufForceOneTimeSubmitDefault",
            "Value": 0,
            "Description": "No override, use app's preference."
          },
          {
            "Name": "CmdBufForceOneTimeSubmitOn",
            "Value": 1,
            "Description": "Force CMD_BUFFER_ONE_TIME_SUBMIT always on."
          },
          {
            "Name": "CmdBufForceOneTimeSubmitOff",
            "Value": 2,
            "Description": "Force CMD_BUFFER_ONE_TIME_SUBMIT always off."
          }
        ],
        "Name": "CmdBufForceOneTimeSubmit",
        "IsExlusive": true
      },
      "Name": "CmdBufForceOneTimeSubmit",
      "Tags": [
        "Command Buffer"
      ],
      "Defaults": {
        "Default": "CmdBufForceOneTimeSubmitDefault"
      },
      "Scope": "PrivatePalKey",
      "Type": "enum",
      "Description": "Globally overrides the CMD_BUFFER_ONE_TIME_SUBMIT command buffer building flag."
    },
    {
      "ValidValues": {
        "IsEnum": true,
        "Values": [
          {
            "Name": "CmdBufPreemptModeDisable",
            "Value": 0,
            "Description": "Command buffers will not be preempted but our queues support preemption."
          },
          {
            "Name": "CmdBufPreemptModeEnable",
            "Value": 1,
            "Description": "Command buffers may be preempted if KMD reports support."
          },
          {
            "Name": "CmdBufPreemptModeFullDisableUnsafe",
            "Value": 2,
            "Description": "PAL pretends KMD doesn't support mid-command buffer preemption. This can hang or corrupt other drivers. It must only be used for debug."
          }
        ],
        "Name": "CmdBufPreemptMode"
      },
      "Name": "CmdBufPreemptionMode",
      "Tags": [
        "Command Buffer"
      ],
      "Defaults": {
        "Default": "CmdBufPreemptModeEnable"
      },
      "Scope": "PrivatePalKey",
      "Type": "enum",
      "Description": "Controls to what degree command buffers support mid-command buffer preemption."
    },
    {
      "ValidValues": {
        "Values": [
          {
            "Description": "PAL will dump CE RAM using a postamble command stream whenever either MCBP is enabled or the client enables the 'persistent CE RAM' feature.",
            "Value": true
          },
          {
            "Description": "PAL will dump CE RAM using a postamble command stream whenever the client enables PAL's 'persistent CE RAM' feature. (Typically only DX9P will do this).",
            "Value": false
          }
        ]
      },
      "Name": "CommandBufferForceCeRamDumpInPostamble",
      "Tags": [
        "Command Buffer"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Toggles whether or not PAL should add a postamble to universal Queue submissions to dump CE RAM whenever MCBP is enabled."
    },
    {
      "Name": "CommandBufferCombineDePreambles",
      "Tags": [
        "Command Buffer"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Combines the DE per-submit and per-context preambles into one per-submit preamble."
    },
    {
      "Name": "VideoCommandBufferAddVerifySignature",
      "Tags": [
        "Command Buffer"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "For video encode/decode, add a signature enformcement package to IB which will be verified by firmware to ensure integrity."
    },
    {
      "Name": "CmdUtilVerifyShadowedRegRanges",
      "Tags": [
        "Command Buffer"
      ],
      "Defaults": {
        "Default": true
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "If true, PAL will verify that all register writes in command buffers are properly shadowed when mid command buffer preemption is enabled. This can have a noticable impact on CPU performance. This setting is ignored in release builds."
    },
    {
      "ValidValues": {
        "Name": "SubmitOptMode",
        "IsEnum": true,
        "SkipGen": true,
        "Values": [
          {
            "Name": "Default",
            "Value": 0,
            "Description": "PAL will enable optimizations when generally efficient."
          },
          {
            "Name": "Disabled",
            "Value": 1,
            "Description": "Disable all optimizations that could be detrimental in special cases."
          },
          {
            "Name": "MinKernelSubmits",
            "Value": 2,
            "Description": "Minimize the overhead of launching command buffers on the CPU and GPU."
          },
          {
            "Name": "MinGpuCmdOverhead",
            "Value": 3,
            "Description": "Minimize the overhead of reading command buffer commands on the GPU."
          }
        ]
      },
      "Name": "SubmitOptModeOverride",
      "Tags": [
        "Command Buffer"
      ],
      "Defaults": {
        "Default": 0
      },
      "Scope": "PrivatePalKey",
      "Type": "uint32",
      "Description": "If non-zero, it forces all SubmitOptModes to a specific value. 0: No Override 1: SubmitOptMode::Default 2: SubmitOptMode::Disabled 3: SubmitOptMode::MinKernelSubmits 4: SubmitOptMode::MinGpuCmdOverhead "
    },
    {
      "ValidValues": {
        "IsEnum": true,
        "Values": [
          {
            "Name": "TileSwizzleNone",
            "Value": 0,
            "Description": "Disable tile swizzle for all surfaces."
          },
          {
            "Name": "TileSwizzleColor",
            "Value": 1,
            "Description": "Enable tile swizzle for renderable color targets."
          },
          {
            "Name": "TileSwizzleDepth",
            "Value": 2,
            "Description": "Enable tile swizzle for renderable depth-stencil targets."
          },
          {
            "Name": "TileSwizzleShaderRes",
            "Value": 4,
            "Description": "Enable tile swizzle for shader resources."
          },
          {
            "Name": "TileSwizzleAllBits",
            "Value": 7,
            "Description": "Enable tile swizzle for all surfaces."
          }
        ],
        "Name": "TileSwizzleBits"
      },
      "Name": "TileSwizzleMode",
      "Tags": [
        "Resource Settings"
      ],
      "Flags": {
        "IsHex": true
      },
      "Defaults": {
        "Default": 7
      },
      "Scope": "PrivatePalKey",
      "Type": "uint32",
      "Description": "Bitmask which enables bank & pipe tile swizzling for surfaces."
    },
    {
      "Name": "EnableVidMmGpuVaMappingValidation",
      "Tags": [
        "Resource Settings"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "On WDDM2 platforms, PAL is able to send a set of flags through to the kernel which can control how the KMD handles each GPU VA mapping when reserving VA space, mapping VA space or updating the GPU page mappings. If this setting is true then PAL will request that extra validation is performed to ensure that every GPU virtual address mapping to a specific physical allocation specifies a matching set of these KMD flags."
    },
    {
      "Name": "EnableUswcHeapAllAllocations",
      "Tags": [
        "Resource Settings"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "If true, then this change causes PAL to automatically consider GART to be a valid heap for many allocations."
    },
    {
      "Name": "ForceCpuAccessibleAllocationsToNonLocal",
      "Tags": [
        "Resource Settings"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "If true, do not allow any CPU-accessible GPU memory allocations to be in local VRAM. If no client-requested heaps are left after filtering out local heaps, we will default to GartUswc."
    },
    {
      "Name": "EnableWddmAllocChunking",
      "Tags": [
        "Resource Settings"
      ],
      "Defaults": {
        "Default": true
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "If true, then large allocations under WDDM may be split into multiple backing allocations to avoid OS limits."
    },
    {
      "ValidValues": {
        "IsEnum": true,
        "Values": [
          {
            "Name": "Addr2PreferredNone",
            "Value": 0,
            "Description": "Addrlib selects its own default swizzle set, this disables PAL's perf tuning."
          },
          {
            "Name": "Addr2PreferredSW_Z",
            "Value": 1,
            "Description": "Prefer ZOrder swizzle (ADDR_SW_Z)."
          },
          {
            "Name": "Addr2PreferredSW_S",
            "Value": 2,
            "Description": "Prefer Standard swizzle (ADDR_SW_S)."
          },
          {
            "Name": "Addr2PreferredSW_D",
            "Value": 4,
            "Description": "Prefer Display swizzle (ADDR_SW_D)."
          },
          {
            "Name": "Addr2PreferredSW_R",
            "Value": 8,
            "Description": "Prefer Rotated swizzle (ADDR_SW_R)."
          },
          {
            "Name": "Addr2PreferredDefault",
            "Value": 15,
            "Description": "Prefer all swizzle modes, PAL will selectively disable some modes for performance."
          }
        ],
        "Name": "Addr2PreferredSwizzleTypeSet"
      },
      "Name": "Addr2PreferredSwizzleTypeSet",
      "Tags": [
        "Resource Settings"
      ],
      "Flags": {
        "IsHex": true,
        "IsBitmask": true
      },
      "Defaults": {
        "Default": "Addr2PreferredDefault"
      },
      "Scope": "PrivatePalKey",
      "Type": "uint32",
      "Description": "PAL's default swizzle type set when using AddrLib2."
    },
    {
      "Name": "PipelinePrefetchEnable",
      "Tags": [
        "Prefetching (L2 Cache Warming)"
      ],
      "Defaults": {
        "Default": true
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "If true, attempt to prefetch pipeline shader code and data into L2 before executing the pipeline."
    },
    {
      "Name": "PrefetchClampSize",
      "Tags": [
        "Prefetching (L2 Cache Warming)"
      ],
      "Defaults": {
        "Default": 0
      },
      "Scope": "PrivatePalKey",
      "Type": "uint32",
      "Description": "When this setting is non-zero, clamp L2 prefetching to this many bytes."
    },
    {
      "Name": "MaxScratchRingSizeBaseline",
      "Tags": [
        "Scratch",
        "Performance"
      ],
      "Defaults": {
        "Default": 268435456
      },
      "Scope": "PrivatePalKey",
      "Type": "uint64",
      "Description": "Controls the maximum size of the scratch ring allocation. This is the minimum value the max size can be, it scales higher with larger VRAM sizes (see MaxScratchRingSizeScalePct). If the application requests more scratch memory than the computed max size, the driver will limit the number of waves in flight to comply with the memory restriction."
    },
    {
      "Name": "MaxScratchRingSizeScalePct",
      "Tags": [
        "Scratch",
        "Performance"
      ],
      "Defaults": {
        "Default": 10
      },
      "Scope": "PrivatePalKey",
      "Type": "uint32",
      "Description": "Controls the maximum size of the scratch ring allocation. If the product of this setting and the invisible memory heap size is larger than MaxScratchRingSizeBaseline then the calculated value will be the max scratch ring size. If the application requests more scratch memory than the computed max size, the driver will limit the number of waves in flight to comply with the memory restriction."
    },
    {
      "Name": "IfhGpuMask",
      "Tags": [
        "MGPU",
        "General",
        "Debug"
      ],
      "Flags": {
        "IsHex": true
      },
      "Defaults": {
        "Default": 15
      },
      "Scope": "PrivatePalKey",
      "Type": "uint32",
      "Description": "Mask of the GPUs to have all submits dropped. See IFH setting for IFH mode that will be applied. If the bit is set, the GPU will have its submits dropped."
    },
    {
      "Name": "HwCompositingEnabled",
      "Tags": [
        "MGPU"
      ],
      "Defaults": {
        "Default": true
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Enables support for the HW compositor (crossDisplayPresent) if the hardware supports HW compositing."
    },
    {
      "Name": "MgpuCompatibilityEnabled",
      "Tags": [
        "MGPU"
      ],
      "Defaults": {
        "Default": true
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Enables support for MGPU in PAL. If MGPU Compatibility is disabled, all GPUs will still be exposed to the application, but no MGPU-specific compatibility flags will be returned."
    },
    {
      "Name": "PeerMemoryEnabled",
      "Tags": [
        "MGPU"
      ],
      "Defaults": {
        "Default": true
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Enables support for peer memory and peer memory transfers if the hardware is capable."
    },
    {
      "Name": "ForcePresentViaCpuBlt",
      "Tags": [
        "WSI"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Forces the present technique to use a CPU-side copy (eg. GDI on Windows)."
    },
    {
      "Name": "PresentViaOglRuntime",
      "Tags": [
        "WSI"
      ],
      "Defaults": {
        "Default": true
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "When true window mode present path will go through OpenGL runtime. When false window mode present path still go legacy DWM API path."
    },
    {
      "Name": "DebugForceResourceAlignment",
      "Tags": [
        "Debug",
        "Resource Settings",
        "Bringup",
        "Emulation"
      ],
      "Defaults": {
        "Default": 0
      },
      "Scope": "PrivatePalKey",
      "Type": "uint64",
      "Description": "Align all resources to the max(originalAlignment, specifiedAlignment). This setting is in units of bytes. This is a debug setting and strange behavior (e.g. poor performance, out of memory) may occur in some applications."
    },
    {
      "Name": "DebugForceResourceAdditionalPadding",
      "Tags": [
        "Debug",
        "Resource Settings",
        "Bringup",
        "Emulation"
      ],
      "Defaults": {
        "Default": 0
      },
      "Scope": "PrivatePalKey",
      "Type": "uint64",
      "Description": "Add the additional padding to resources' memory requirements. This setting is in units of bytes. This is a debug setting and strange behavior (e.g. poor performance, out of memory) may occur in some applications."
    },
    {
      "Name": "DisableComputeEngine",
      "Tags": [
        "Bringup"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Disable entire Compute engine in UMD driver."
    },
    {
      "Name": "OverlayReportMes",
      "Tags": [
        "General",
        "DevMode"
      ],
      "Defaults": {
        "Default": true
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Determines if the developer mode overlay will report information about MES HWS."
    },
    {
      "Name": "MipGenUseFastPath",
      "Tags": [
        "General",
        "Resource Settings",
        "Performance"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "Experimental, not yet production ready. If set, use a single-pass (for up to 12 mip levels) compute shader-based path for CmdGenerateMipmaps. Otherwise, use a multi-pass path based on ScaledCopyImage (may be graphics or compute)."
    },
    {
      "Name": "UseFp16GenMips",
      "Tags": [
        "General",
        "Resource Settings",
        "Performance"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "If mipGenUseFastPath == true and this is true - use the fp16 single-pass GenMips compute pass."
    },
    {
      "Name": "TmzEnabled",
      "Tags": [
        "General"
      ],
      "Defaults": {
        "Default": true
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "When true, TMZ is enabled if HW supports it. Otherwise TMZ is disabled. TMZ(trusted memory zone / protected memory)"
    },
    {
      "Name": "VrsEnhancedGfxClears",
      "Tags": [
        "General"
      ],
      "Defaults": {
        "Default": true
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "For GPUs that support VRS, if this is true, graphics slow clears are performed at a 2x2 shading rate"
    },
    {
      "Name": "WaForceLinearHeight16Alignment",
      "Tags": [
        "General"
      ],
      "Defaults": {
        "Default": false
      },
      "Scope": "PrivatePalKey",
      "Type": "bool",
      "Description": "For YUV planar video decoder resource with linear swizzle mode, focring height as 16 alignment."
    },
    {
      "Name": "DbgHelperBits",
      "Tags": [
        "General"
      ],
      "Flags": {
        "IsHex": true
      },
      "Defaults": {
        "Default": 0
      },
      "BuildTypes": [
        "PAL_DEVELOPER_BUILD"
      ],
      "Scope": "PrivatePalKey",
      "Type": "uint64",
      "Description": "Debug helper bitmask for debugging and experiments. Driver developers can use this setting to configure personal experiments. Requires PAL_DEVELOPER_BUILD."
    },
    {
      "ValidValues": {
        "IsEnum": true,
        "Values": [
          {
            "Name": "UseExecuteIndirectShaders",
            "Value": 0,
            "Description": "ExecuteIndirect packet is not supported, so use the RPM IndirectCmdGen shaders."
          },
          {
            "Name": "UseExecuteIndirectV1PacketForDraw",
            "Value": 1,
            "Description": "IndirectDraw functionality is supported by the new ExecuteIndirect Packet."
          },
          {
            "Name": "UseExecuteIndirectV1PacketForDrawSpillTable",
            "Value": 2,
            "Description": "Spill table for user data is supported with DMA_DATA_INDIRECT."
          },
          {
            "Name": "UseExecuteIndirectV1PacketForDrawSpillAndVbTable",
            "Value": 3,
            "Description": "VertexBufferTable requires BUILD_UNTYPED_SRD."
          },
          {
            "Name": "UseExecuteIndirectV1PacketForDrawDispatch",
            "Value": 4,
            "Description": "Dispatch functionality on GFX queue added to EI V1."
          },
          {
            "Name": "UseExecuteIndirectV2Packet",
            "Value": 5,
            "Description": "Use the new PM4 ExecuteIndirectV2 for the above operations."
          },
          {
            "Name": "UseExecuteIndirectV2PacketDefault",
            "Value": 6,
            "Description": "CmdGenShaders won't be used and EIV2 will be the default for EI operations."
          }
        ],
        "Name": "UseExecuteIndirectPacket"
      },
      "Description": "Use the ExecuteIndirect packet in place of the IndirectCmdGen shaders as and when supported.",
      "Tags": [
        "General",
        "Performance"
      ],
      "Defaults": {
        "Default": "UseExecuteIndirectShaders"
      },
      "Scope": "PrivatePalKey",
      "Type": "enum",
      "Name": "UseExecuteIndirectPacket"
    },
    {
      "ValidValues": {
        "IsEnum": true,
        "Values": [
          {
            "Name": "NoXorForRenderTarget",
            "Value": 1,
            "Description": "Render targets"
          },
          {
            "Name": "NoXorForTexture",
            "Value": 2,
            "Description": "Non renderable textures"
          },
          {
            "Name": "NoXorOverrideLinear3d",
            "Value": 4,
            "Description": "3D render targets don't get linear"
          }
        ],
        "Name": "NoXor"
      },
      "Description": "Bitmask of cases where XOR swizzle modes are disallowed.  GFX11 only",
      "Tags": [
        "Resource Settings"
      ],
      "Flags": {
        "IsBitmask": true,
        "IsHex": true
      },
      "Defaults": {
        "Default": 0
      },
      "Scope": "PrivatePalKey",
      "Type": "uint32",
      "Name": "NoXor"
    },
    {
      "ValidValues": {
        "IsEnum": true,
        "Values": [
          {
            "Name": "UseDccSingleSample",
            "Value": 1,
            "Description": "Single sample render targets."
          },
          {
            "Name": "UseDccSrgb",
            "Value": 2,
            "Description": "SRGB numeric format images."
          },
          {
            "Name": "UseDccNonTcCompatShaderRead",
            "Value": 4,
            "Description": "Non-TC compatible shader read."
          },
          {
            "Name": "UseDccPrt",
            "Value": 8,
            "Description": "Partially resident textures."
          },
          {
            "Name": "UseDccMultiSample2x",
            "Value": 16,
            "Description": "2x multisample render targets."
          },
          {
            "Name": "UseDccMultiSample4x",
            "Value": 32,
            "Description": "4x multisample render targets."
          },
          {
            "Name": "UseDccMultiSample8x",
            "Value": 64,
            "Description": "8x multisample render targets."
          },
          {
            "Name": "UseDccEqaa",
            "Value": 128,
            "Description": "EQAA render targets."
          },
          {
            "Name": "UseDccRenderTargetUav",
            "Value": 256,
            "Description": "Shader writable surfaces(UAV) that are also render targets. Gfx10+."
          },
          {
            "Name": "UseDccNonRenderTargetUav",
            "Value": 512,
            "Description": "Shader writable surfaces(UAV) that are not render targets. Gfx10+."
          },
          {
            "Name": "UseDccAllowForceEnable",
            "Value": 1024,
            "Description": "Allows the client driver to force-enable DCC on particular images. Gfx9+."
          },
          {
            "Name": "UseDccMipMappedArrays",
            "Value": 2048,
            "Description": "Surfaces which have Arrays and MipMaps. Gfx9+."
          },
          {
            "Name": "UseDccYuvPlanar",
            "Value": 4096,
            "Description": "YUV planar surfaces. Gfx10+."
          },
          {
            "Name": "UseDccForAllCompatibleFormats",
            "Value": 8192,
            "Description": "DCC is allowed for typeless resources.  Not supported on all ASICs"
          }
        ],
        "Name": "UseDcc"
      },
      "Description": "Bitmask of cases where DCC (delta color compression) surfaces will be used.",
      "Tags": [
        "Gfx8",
        "Gfx9",
        "Gfx10",
        "Gfx11"
      ],
      "Flags": {
        "IsBitmask": true,
        "IsHex": true
      },
      "Defaults": {
        "Default": 3327
      },
      "Scope": "PrivatePalKey",
      "Type": "uint32",
      "Name": "UseDcc"
    },
    {
      "ValidValues": {
        "IsEnum": true,
        "IsExclusive": true,
        "Values": [
          {
            "Name": "OffchipLdsBufferSize8192",
            "Value": 0,
            "Description": "8k DWORDs."
          },
          {
            "Name": "OffchipLdsBufferSize4096",
            "Value": 1,
            "Description": "4k DWORDs."
          },
          {
            "Name": "OffchipLdsBufferSize2048",
            "Value": 2,
            "Description": "2k DWORDs."
          },
          {
            "Name": "OffchipLdsBufferSize1024",
            "Value": 3,
            "Description": "1k DWORDs."
          }
        ],
        "Name": "OffchipLdsBufferSize"
      },
      "Description": "Controls the size of each offchip LDS Buffer.",
      "Tags": [
        "Graphics Pipelines"
      ],
      "Defaults": {
        "Default": "OffchipLdsBufferSize8192"
      },
      "Scope": "PrivatePalKey",
      "Type": "enum",
      "Name": "OffchipLdsBufferSize"
    },
    {
      "ValidValues": {
        "Values": [
          {
            "LogicOp": "LessThanOrEqual",
            "Description": "Number of offchip tessellation buffers.",
            "Value": 508
          }
        ]
      },
      "Description": "Controls the number of LDS buffers used for offchip tessellation: Gfx9: 1->508: Number of offchip tessellation buffers.",
      "Tags": [
        "Graphics Pipelines"
      ],
      "Defaults": {
        "Default": 508
      },
      "Scope": "PrivatePalKey",
      "Type": "uint32",
      "Name": "NumOffchipLdsBuffers"
    },
    {
      "Description": "Controls the size of the tess-factor buffer. This size is per-SE, andmeasured in DWORDs.",
      "Tags": [
        "Graphics Pipelines"
      ],
      "Defaults": {
        "Default": 12288
      },
      "Scope": "PrivatePalKey",
      "Type": "uint32",
      "Name": "TessFactorBufferSizePerSe"
    }
  ]
}